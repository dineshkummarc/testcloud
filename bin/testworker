#!/usr/bin/env php
<?php

require(dirname(__FILE__).'/../vendor/autoload.php');
require(dirname(__FILE__).'/../lib/Zmsg.php');

$options = new \Ergo\Console\Options($argv,array(
	'--help','-h','--connect=NULL'
));

// show help
if($options->has('-h','--help') || $options->errors())
{
	$options->printErrors();

	echo "\nusage: $argv[0] [..args] testfile\n\n";
	echo " --help             : this documentation\n";
	echo "\n";
	exit(1);
}

$endpoint = $options->value('--connect') ?: 'tcp://localhost:2225';
printf("Connecting to %s for tests\n", $endpoint);

$context = new ZMQContext();
$worker = $context->getSocket(ZMQ::SOCKET_REQ);
$worker->connect($endpoint);

$worker->send('READY');
$running = true;
$cwd = getcwd();

printf("Ready for tests\n");

while($running)
{
	$zmsg = new Zmsg($worker);
	$zmsg->recv();

	$body = $zmsg->body();
	$req = json_decode($body);
	$timer = microtime(true);
	$dir = isset($req->cwd) ? realpath($req->cwd) : $cwd;

	echo "C: $req->cmd (in $dir)\n";
		
	$proc = proc_open(
		"$req->cmd 2>&1",
		array(1=>array('pipe','w')),
		$pipes,
		$dir
	);

	$stdout = stream_get_contents($pipes[1]);
	echo "$stdout\n";

	fclose($pipes[1]);
  $exitcode = proc_close($proc);

	$r = array(
		'cmd'=>$req->cmd,
		'exitcode'=>$exitcode,
		'stdout'=>$stdout,
		'time'=>(microtime(true)-$timer)*1000
	);

	$zmsg->body_set(json_encode($r));
	$zmsg->send();
}

$env->destroy();
